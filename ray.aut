               JOB  Ray tracer
               CTL  3311

     ****************************************************************
     * Ray tracer
     * Lawrence Kesteloot, 2014
     *
     * Ray-traces a scene and sends the resulting image to the
     * printer.
     *

     *** Index registers.
               ORG  87
     X1        DSA  0                   Index register 1 (print column).

     *** Main routine.
               ORG  333
     START     ZA   +50,YV              Reset YV

     *** Next line.
     NXTLN     SBR  X1,201              Reset column in printer buffer
               CS   332                 Clear printer area
               CS
               ZA   -50,XV              Reset XV

     *** Next pixel.

     * Trace a ray from the camera into the scene.
     NXTPX     ZA   X0,TRX0
               ZA   Y0,TRY0
               ZA   Z0,TRZ0
               ZA   XV,TRXV
               ZA   YV,TRYV
               ZA   ZV,TRZV
               B    TRACE

     * See if we hit the sphere.
               BCE  SKIP,TRHIT,0        Skip if missed.

     * Draw pixel.
               MN   STAR,0&X1
               MZ   STAR,0&X1

     SKIP      A    +1,XV               XV++
               MA   @001@,X1            X1++

     *** See if we're done.
               ZA   MAXX,TMP3           MAXX
               S    XV,TMP3                  - XV
               BWZ  NXTPX,TMP3,B        XV <= MAXX, MAXX - XV >= 0

     *** Print our line.
               W

               A    -2,YV               YV--

     *** See if we're done.
               ZA   MINY,TMP3           MINY
               S    YV,TMP3                  - YV
               BWZ  NXTLN,TMP3,K        YV >= MINY, MINY - YV <= 0

     *** Done.
     FINIS     H    FINIS
               H

     *** Scene.
     XC        DCW  00000               Sphere center
     YC        DCW  00000
     ZC        DCW  -00200
     R2        DCW  00000022500         Sphere radius squared

     ** Initial ray.
     X0        DCW  00000               Position
     Y0        DCW  00000
     Z0        DCW  00050
     XV        DCW  00000               Direction
     YV        DCW  00000
     ZV        DCW  -00050

     *** Constants.
     MAXX      DCW  +051                One past max XV
     MINY      DCW  -051                One past min Y
     STAR      DC   @*@

     *** Work area.
     TMP3      DCW  000                 Temporary working space

     ****************************************************************
     * Subroutine to trace a ray. Given a ray and a (global) scene,
     * returns whether the ray intersected the object and how far.
     *
     * Entry point:  TRACE
     *
     * The caller must set the following fields:
     *
     *     TRX0    Position of ray
     *     TRY0
     *     TRZ0
     *     TRXV    Direction of ray
     *     TRYV
     *     TRZV
     *
     * Upon return:
     *
     *     TRHIT   1 if hit, 0 if not.
     *     TRDIST  Distance to object, in lengths of the direction vector.
     *

     TRACE     SBR  TRACEX&3            Save return address

     * Move ray to be relative to sphere.
               ZA   TRX0,TRXR           X0
               S    XC,TRXR                - XC
               ZA   TRY0,TRYR           Y0
               S    YC,TRYR                - YC
               ZA   TRZ0,TRZR           Z0
               S    ZC,TRZR                - ZC

     * Quadratic equation coefficients.
               ZA   TRXV,DOX1           A = TRV*TRV
               ZA   TRYV,DOY1
               ZA   TRZV,DOZ1
               ZA   TRXV,DOX2
               ZA   TRYV,DOY2
               ZA   TRZV,DOZ2
               B    DOT
               ZA   DOTV,TRA

               ZA   TRXV,DOX1           B = 2*TRV*TRR
               ZA   TRYV,DOY1
               ZA   TRZV,DOZ1
               ZA   TRXR,DOX2
               ZA   TRYR,DOY2
               ZA   TRZR,DOZ2
               B    DOT
               ZA   DOTV,TRB
               A    DOTV,TRB

               ZA   TRXR,DOX1           C = TRR*TRR - R*R
               ZA   TRYR,DOY1
               ZA   TRZR,DOZ1
               ZA   TRXR,DOX2
               ZA   TRYR,DOY2
               ZA   TRZR,DOZ2
               B    DOT
               ZA   DOTV,TRC
               S    R2,TRC

     * Discriminant: B*B - 4*A*C
               ZA   TRB,TRDISC-13       B*B
               M    TRB,TRDISC
               ZA   TRA,TRTMP-12        A*C
               M    TRC,TRTMP
               S    TRTMP,TRDISC
               S    TRTMP,TRDISC
               S    TRTMP,TRDISC
               S    TRTMP,TRDISC

               BWZ  TRNEG,TRDISC,K      Jump if TRDISC is negative (missed the sphere).

               MCW  @1@,TRHIT
               B    TRACEX

     TRNEG     MCW  @0@,TRHIT

     TRACEX    B    000                 Return to caller

     * Input fields.
     TRX0      DCW  #5                  Ray position
     TRY0      DCW  #5
     TRZ0      DCW  #5
     TRXV      DCW  #5                  Ray direction
     TRYV      DCW  #5
     TRZV      DCW  #5

     * Output fields.
     TRHIT     DCW  #1                  Hit (1) or miss (0)

     * Internal work space.
     TRXR      DCW  #5                  Ray position relative to sphere
     TRYR      DCW  #5
     TRZR      DCW  #5
     TRA       DCW  #11                 Quadratic equation coefficients
     TRB       DCW  #12
     TRC       DCW  #11
     TRDISC    DCW  #25                 Quadratic equation discriminant
     TRTMP     DCW  #23

     ****************************************************************
     * Dot product of two 3-vectors.
     *
     * Entry point:  DOT
     *
     * The caller must set the following fields:
     *
     *     DOX1    Vector 1
     *     DOY1
     *     DOZ2
     *     DOX2    Vector 2
     *     DOY2
     *     DOZ2
     *
     * Upon return:
     *
     *     DOTV    Dot product of vectors 1 and 2.
     *

     DOT       SBR  DOTX&3              Save return address

               ZA   DOX1,DOTV-6         DOX1
               M    DOX2,DOTV                * DOX2

               ZA   DOY1,DOTMP-6        DOY1
               M    DOY2,DOTMP               * DOY2
               A    DOTMP,DOTV          Add to dot product

               ZA   DOZ1,DOTMP-6        DOZ1
               M    DOZ2,DOTMP               * DOZ2
               A    DOTMP,DOTV          Add to dot product

     DOTX      B    000                 Return

     * Input fields.
     DOX1      DCW  #5
     DOY1      DCW  #5
     DOZ1      DCW  #5
     DOX2      DCW  #5
     DOY2      DCW  #5
     DOZ2      DCW  #5

     * Output fields.
     DOTV      DCW  #11                 XXX might overflow?

     * Internal work space.
     DOTMP     DCW  #11

     ****************************************************************
     * Integer square root. Uses Newton's method.
     * See http://en.wikipedia.org/wiki/Integer_square_root
     *
     * Entry point:  SQRT
     *
     * The caller must set the following fields:
     *
     *     SQIN    Non-negative integer (25 digits).
     *
     * Upon return:
     *
     *     SQOUT   Square root of SQIN.
     *
     * The algorithm iterates this function:
     *
     *     X' = (X + N/X)/2
     *
     * Where N is the numbers whose root we want. It converges
     * quadratically and is guaranteed to converge if X starts
     * with the value N. The algorithm is finished when
     * successive values of X stop changing.
     *

     SQRT      SBR  SQRTX&3             Save return address

               ZA   SQIN,SQOUT          Seed iteration with N

     SQLOOP    ZA   SQOUT,SQPREV        Save old value of X

               ZA   SQIN,SQTMP          N/X
               D    SQOUT,SQTMP-24
               A    SQOUT,SQTMP-26          + X
               ZA   SQTMP-26,SQTMP
               D    @2@,SQTMP-24        (     )/2
               ZA   SQTMP-2,SQOUT
               C    SQOUT,SQPREV        X = previous X?
               BE   SQRTX               Yes, we're done.
               B    SQLOOP              Keep going.

     SQRTX     B    000                 Return

     * Input fields.
     SQIN      DCW  #25

     * Output fields.
     SQOUT     DCW  #25

     * Internal work space.
     SQPREV    DCW  #25
     SQTMP     DCW  #51

               END  START
